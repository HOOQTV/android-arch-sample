apply plugin: 'com.android.application'

android {
    compileSdkVersion 26

    defaultConfig {
        applicationId "com.imadji.arch.sample"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode versionProperties.code
        versionName versionProperties.name
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
            storeFile file('../keystore/debug.keystore')
        }
        release {
            keyAlias 'archsamplekey'
            keyPassword keystoreProperties.keyPassword
            storePassword keystoreProperties.storePassword
            storeFile file('../keystore/release.keystore')
        }
    }

    buildTypes {
        debug {
            versionNameSuffix "-debug"
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), "$project.rootDir/tools/rules-proguard-debug.pro"
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), "$project.rootDir/tools/rules-proguard.pro"
        }
    }

    flavorDimensions "environment"

    productFlavors {
        dev {
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            signingConfig signingConfigs.debug
            resValue "string", "app_name", "Arch Sample Dev"
        }
        prod {
            signingConfig signingConfigs.release
            resValue "string", "app_name", "Arch Sample"
        }
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
            all {
                jvmArgs '-noverify'
            }
        }
    }

    android.applicationVariants.all { variant ->
        def apkName = "arch-sample"
        apkName += "-" + variant.versionName
        variant.outputs.all {
            outputFileName = apkName + ".apk"
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == "com.android.support") {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "26.+"
            }
        }
    }
}

ext {
    supportVersion = "28.0.0"
    constraintLayoutVersion = "1.1.3"
    butterknifeVersion = "8.8.1"
    glideVersion = "4.8.0"
    okHttpVersion = "3.12.0"
    retrofitVersion = "2.5.0"
    firebaseVersion = "16.0.7"
    espressoVersion = "3.0.2"
    junitVersion = "4.12"
    mockitoVersion = "2.12.0"
    robolectricVersion = "4.2"
    testRunnerVersion = "1.0.2"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    /* Android Support Library */
    implementation "com.android.support:appcompat-v7:$supportVersion"

    /* Android Architecture Component - ConstraintLayout */
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"

    /* Retrofit using Okhttp, Okhttp Logging Interceptor, Gson */
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

    /* Glide for Image Loading */
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

    /* Butterknife for inject Views */
    implementation "com.jakewharton:butterknife:$butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    /* Firebase */
    implementation "com.google.firebase:firebase-core:$firebaseVersion"

    /* Test Libs */
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    androidTestImplementation "com.android.support.test:runner:$testRunnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
}

apply plugin: 'com.google.gms.google-services'